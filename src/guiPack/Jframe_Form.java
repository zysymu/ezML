package guiPack;

import models.LinearRegression;
import models.Algorithm;
import models.LogisticRegression;
import java.io.File;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import preprocess.*;
import javax.swing.JTextField;

public class Jframe_Form extends javax.swing.JFrame {

    public Jframe_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        seletorArq = new javax.swing.JButton();
        filePathField = new javax.swing.JTextField();
        RLinear = new javax.swing.JRadioButton();
        RLogistica = new javax.swing.JRadioButton();
        arvoreD = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        talkerField = new java.awt.TextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        epochsField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        LRfield = new javax.swing.JTextField();
        stochasticOnOffButton = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        tresholdField = new javax.swing.JTextField();
        montarButton = new javax.swing.JButton();
        percentage4train = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        trainButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        normalizeButton = new javax.swing.JToggleButton();
        infoButton = new javax.swing.JButton();
        plotButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        seletorArq.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        seletorArq.setText("Selecione um arquivo");
        seletorArq.setToolTipText("");
        seletorArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seletorArqActionPerformed(evt);
            }
        });

        filePathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(RLinear);
        RLinear.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        RLinear.setText("Regressão linear");
        RLinear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RLinearActionPerformed(evt);
            }
        });

        buttonGroup1.add(RLogistica);
        RLogistica.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        RLogistica.setText("Regressão Logistica");
        RLogistica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RLogisticaActionPerformed(evt);
            }
        });

        buttonGroup1.add(arvoreD);
        arvoreD.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        arvoreD.setText("Arvore de decisões");
        arvoreD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arvoreDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setText("Selecione um algoritmo: ");

        talkerField.setEditable(false);
        talkerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talkerFieldActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configurações de Algoritmo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Epochs:");

        epochsField.setText("500");
        epochsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epochsFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Learning Rate:");

        LRfield.setText("0.01");
        LRfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LRfieldActionPerformed(evt);
            }
        });

        stochasticOnOffButton.setText("Stochastic");
        stochasticOnOffButton.setEnabled(false);
        stochasticOnOffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stochasticOnOffButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Treshold:");

        tresholdField.setText("0.5");
        tresholdField.setEnabled(false);
        tresholdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresholdFieldActionPerformed(evt);
            }
        });

        montarButton.setText("Montar");
        montarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montarButtonActionPerformed(evt);
            }
        });

        percentage4train.setText("60");
        percentage4train.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentage4trainActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("% para treino:");

        trainButton.setText("Treinar");
        trainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Testar");

        normalizeButton.setText("Normalizar");
        normalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(epochsField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(percentage4train)
                            .addComponent(LRfield, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(normalizeButton))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(stochasticOnOffButton)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tresholdField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(283, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(montarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(trainButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(5, 5, 5))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(epochsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stochasticOnOffButton)
                    .addComponent(jLabel4)
                    .addComponent(tresholdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LRfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(percentage4train, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(normalizeButton)
                .addContainerGap(8, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainButton)
                    .addComponent(montarButton)
                    .addComponent(jButton1)))
        );

        infoButton.setText("Informações");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        plotButton.setText("Plot de erros(?)");
        plotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(seletorArq)
                .addGap(48, 48, 48)
                .addComponent(filePathField)
                .addGap(54, 54, 54))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(RLinear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RLogistica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arvoreD)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(talkerField, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(plotButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seletorArq)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(RLinear)
                    .addComponent(RLogistica)
                    .addComponent(arvoreD))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(talkerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(infoButton)
                        .addComponent(plotButton))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    JFileChooser fileChooser; //janela de escolher arquivo
    String filePath;    //caminho completo do arquivo
    boolean arqOk;      // flag de arquivo valido
    Algorithm alg;      // algoritmo 
    int qualAlg;        // Só me sinaliza qual alg foi escolhido (mais facil q ficar verificando botão)
    boolean modelOk = false;   //me diz se o modelo foi escolhido
    double LRate;   // learning rate
    int epochs;
    boolean paransOk = false; //se epochs e LRate esta ok
    boolean algOk = false;      // se o alg foi instanciado com sucesso
    boolean montagemOk = false; // se data esta dentro de alg e esta tudo pronto para fit()


    private void seletorArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seletorArqActionPerformed
        //faz o botão abrir um FileChooser
        arqOk = false;
        fileChooser = new JFileChooser();
        int resp;
        boolean sair = false;
        while (!arqOk && !sair) {
            resp = fileChooser.showOpenDialog(null); //seleciona file para abrir
            if (resp == JFileChooser.APPROVE_OPTION) { //se um arq foi escolhido
                filePath = fileChooser.getSelectedFile().getAbsolutePath();
                int i = filePath.lastIndexOf('.');
                if (i > 0) { // se tiver um ponto pelo menos
                    if (filePath.substring(i + 1).equals("csv")) { // se for do tipo csv
                        filePathField.setText(fileChooser.getSelectedFile().getAbsolutePath());
                        arqOk = true;
                    } else {
                        showMessageDialog();
                    }
                }
            } else {
                sair = true;
            }
        }
        if (arqOk)
            loadData();
    }//GEN-LAST:event_seletorArqActionPerformed

    double[][] data;
    boolean dataOk = false;

    private void loadData() {
        CSVReader reader = new CSVReader();
        reader.read(filePath, true);
        data = reader.getData();
        dataOk = true;
    }

    private void showMessageDialog() {
        int ok = JOptionPane.showConfirmDialog(null, "Arquilo selecionado é invalido, selecione um arquivo .CSV", "Erro", JOptionPane.DEFAULT_OPTION);
    }


    private void RLinearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RLinearActionPerformed
        qualAlg = 0;
        stochasticOnOffButton.setEnabled(true);
        tresholdField.setEnabled(false);
        modelOk = true;

    }//GEN-LAST:event_RLinearActionPerformed

    private void filePathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathFieldActionPerformed

    private void RLogisticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RLogisticaActionPerformed
        qualAlg = 1;
        stochasticOnOffButton.setEnabled(false);
        tresholdField.setEnabled(true);
        modelOk = true;

    }//GEN-LAST:event_RLogisticaActionPerformed

    private void talkerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talkerFieldActionPerformed

    }//GEN-LAST:event_talkerFieldActionPerformed

    private void arvoreDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arvoreDActionPerformed
        qualAlg = 2;

        stochasticOnOffButton.setEnabled(false);
        tresholdField.setEnabled(false);

        modelOk = true;
    }//GEN-LAST:event_arvoreDActionPerformed

    private void LRfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LRfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LRfieldActionPerformed

    private void stochasticOnOffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stochasticOnOffButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stochasticOnOffButtonActionPerformed

    private void tresholdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresholdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tresholdFieldActionPerformed

    private void epochsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epochsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_epochsFieldActionPerformed

    private void montarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montarButtonActionPerformed
        /*
        try {
            LRate = Double.parseDouble(LRfield.getText());
            epochs = Integer.parseInt(epochsField.getText());
            if (epochs > 0 && LRate > 0) {
                paransOk = true;
            }
        } catch (NumberFormatException e) {
            paransOk = false;
            talkerField.setText("Entrada de epochs ou learning rate invalida");
        }

        if (arqOk && modelOk && paransOk)
            buildModel();
        else if (!paransOk)
            talkerField.setText("Escolha epochs e leaarning rate validos");
        else if (!arqOk)
            talkerField.setText("Escolha um arquivo valido antes de montar");
        else if (!modelOk)
            talkerField.setText("Escolha um modelo antes de montar");
        */
    }//GEN-LAST:event_montarButtonActionPerformed

    private void percentage4trainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentage4trainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_percentage4trainActionPerformed

    private void trainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainButtonActionPerformed
        try {
            LRate = Double.parseDouble(LRfield.getText());
            epochs = Integer.parseInt(epochsField.getText());
            if (epochs > 0 && LRate > 0) {
                paransOk = true;
            }
        } catch (NumberFormatException e) {
            paransOk = false;
            talkerField.setText("Entrada de epochs ou learning rate invalida");
        }

        if (arqOk && modelOk && paransOk) {
            buildModel();
        } else if (!paransOk) {
            talkerField.setText("Escolha epochs e leaarning rate validos");
        } else if (!arqOk) {
            talkerField.setText("Escolha um arquivo valido antes de montar");
        } else if (!modelOk) {
            talkerField.setText("Escolha um modelo antes de montar");
        }
        
        if(montagemOk){
        alg.fit();
        talkerField.setText("Modelo treinado!");
        //double[] params = alg.getParameters();
        //for (int i = 0; i < params.length; i++) 
           // System.out.println(params[0]);
        }else
           talkerField.setText("monte seu modelo antes de treina-lo");

        
    }//GEN-LAST:event_trainButtonActionPerformed

    private void normalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalizeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normalizeButtonActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        Info inf = new Info();
    }//GEN-LAST:event_infoButtonActionPerformed

    private void plotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotButtonActionPerformed
      if(montagemOk){
         double[] x = {1,2,3,4,5,6,7,8,9};
         new chartWindowMaker(alg.getEfficincyData());
      }
    }//GEN-LAST:event_plotButtonActionPerformed

    private void buildModel() {
        montagemOk = false;
        algOk = false;
        PreProcessing pre = new PreProcessing();
        switch (qualAlg) { //vejo qual vai ser o algoritmo e chamo o construtor independente dos dados dele
            case 0:
                alg = new LinearRegression(stochasticOnOffButton.isSelected());
                algOk = true;
                break;
            case 1:
                try {
                double tr = Double.parseDouble(tresholdField.getText());
                if (tr < 0 || tr > 1.0) {
                    talkerField.setText("Treshold deve estar entra 0 e 1");
                } else {
                    alg = new LogisticRegression(tr);
                    algOk = true;
                }
            } catch (NumberFormatException e) {
                talkerField.setText("Treshold deve ser um numero entre 0 e 1");
            }
            break;
            default:
                System.out.println("Arvore ainda não implementada");
                break;
        }
        if (algOk) { //se esta tudo certo na instanciação
            alg.setEpochs(epochs);
            alg.setLearningRate(LRate);
            try { //passo a data de train para setData 
                double testPer = 1.0 - (Double.parseDouble(percentage4train.getText()))/100.0 ;
                if (testPer > 0 && testPer <= 100) {
                    pre.trainTestSplit(data, testPer, 6); //passa data para pre e separa treino/teste
                    pre.featuresLabelsSplit();  //separa treino/teste
                    if (normalizeButton.isSelected()) {
                        pre.normalize();
                    }
                    alg.setData(pre.getTrainFeatureData(), pre.getTrainLabelData());
                    montagemOk = true;
                } else {
                    talkerField.setText("A porcentagem para treino deve ser entre 0 e 100");
                }
            } catch (NumberFormatException e) {
                talkerField.setText("A porcentagem para treino deve ser um numero entre 0 e 100");
            }
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jframe_Form().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LRfield;
    private javax.swing.JRadioButton RLinear;
    private javax.swing.JRadioButton RLogistica;
    private javax.swing.JRadioButton arvoreD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField epochsField;
    private javax.swing.JTextField filePathField;
    private javax.swing.JButton infoButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton montarButton;
    private javax.swing.JToggleButton normalizeButton;
    private javax.swing.JTextField percentage4train;
    private javax.swing.JButton plotButton;
    private javax.swing.JButton seletorArq;
    private javax.swing.JToggleButton stochasticOnOffButton;
    private java.awt.TextField talkerField;
    private javax.swing.JButton trainButton;
    private javax.swing.JTextField tresholdField;
    // End of variables declaration//GEN-END:variables
}
